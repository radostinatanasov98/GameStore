@model GameDetailsViewModel

<form method="post">
    <div class="container" style="margin-bottom: 50px">
        <div class="card" style="margin-top: 10px; width: auto; height: auto;">
            <div class="card-header" style="text-align: center; font-weight: bold; font-size: 150%;">
                @Model.Name
            </div>
            <div class="card-body">
                <center>
                    <iframe width="720" height="480" src="@Model.TrailerUrl" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen></iframe>
                </center>
                <div style="text-align: center; margin-top: 20px;">
                    <h5 class="card-title">@string.Join(", ", Model.Genres)</h5>
                    <p>@Model.Description</p>
                    <p class="card-text" style="font-weight: bold;">@Model.PegiRating</p>
                    <p style="float: left;"></p>
                    <p style="float: right;"></p>
                    @await Component.InvokeAsync("Requirements", new { minId = Model.MinimumRequirementsId, recId = Model.RecommendedRequirementsId })
                    <h6>
                        Publisher:
                        <a asp-area="" asp-controller="Games" asp-action="All" asp-route-SearchQuery="@Model.PublisherName" asp-route-SearchByQuery="Publisher">@Model.PublisherName</a>
                    </h6>
                    <div class="d-flex justify-content-center">
                        <div class="content text-center">
                            <div class="ratings">
                                <h3>Ratings & Reveiws</h3>
                                @if (Model.ReviewsCount > 0 || Model.RatingsCount > 0)
                                {
                                    <span class="product-rating">@Model.Rating.ToString("F2")</span><span>/5</span>
                                    <div class="rating-text"> <span>@Model.RatingsCount ratings & @Model.ReviewsCount reviews</span> </div>
                                    <a asp-area="" asp-controller="Reviews" asp-action="All" asp-route-GameId="@Model.Id" class="btn btn-primary">View Reveiws</a>
                                }
                                else
                                {
                                    <div>This games still hasn't been reviewd or rated</div>
                                    if (Model.Owned)
                                    {
                                        <a asp-area="" asp-controller="Reviews" asp-action="Write" asp-route-GameId="@Model.Id" class="btn btn-primary">Write review</a>
                                    }
                                    else
                                    {
                                        <button disabled class="btn btn-primary">Write review</button>
                                    }
                                }
                            </div>
                        </div>
                    </div>
                    @await Component.InvokeAsync("GameButtons", new { GameId = Model.Id, price = Model.Price })
                </div>
            </div>
        </div>
    </div>
</form>